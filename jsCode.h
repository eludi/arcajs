#pragma once
static const char* jsCode = "\n\n"
"app.emitAsGamepadEvent = function emitAsGamepadEvent(evt, index, axes, buttons) {\n"
"	if(evt.repeat)\n"
"		return;\n"
"\n"
"	if(!('state' in emitAsGamepadEvent))\n"
"		emitAsGamepadEvent.state = {};\n"
"	if(!(index in emitAsGamepadEvent.state)) {\n"
"		const state = emitAsGamepadEvent.state[index] = { axes:[], buttons:[] };\n"
"		if(axes)\n"
"			for(var i=0; i<axes.length; i+=2)\n"
"				state.axes.push(0);\n"
"		if(buttons)\n"
"			for(var i=0; i<buttons.length; ++i)\n"
"				state.buttons.push(false);\n"
"		app.emit('gamepad', {index:index, type:'connect', axes:state.axes.length, buttons:state.buttons.length});\n"
"	}\n"
"\n"
"	const state = emitAsGamepadEvent.state[index];\n"
"	const keydown = evt.type==='keydown';\n"
"	if(!keydown && evt.type!=='keyup')\n"
"		return;\n"
"\n"
"	if(axes) for(var i=0; i<axes.length; ++i) {\n"
"		if(evt.key !== axes[i])\n"
"			continue;\n"
"		const axis = Math.floor(i/2), value = (i%2)?1:-1;\n"
"		if(keydown) {\n"
"			if(state.axes[axis]===value)\n"
"				return;\n"
"		}\n"
"		else if(state.axes[axis]===0 || state.axes[axis]!==value)\n"
"			return;\n"
"		state.axes[axis] = keydown ? value : 0;\n"
"		return app.emit('gamepad', {index:index, type:'axis', axis:axis, value:state.axes[axis]});\n"
"	}\n"
"\n"
"	if(buttons) for(var i=0; i<buttons.length; ++i) {\n"
"		const key = (typeof buttons[i] === 'object') ? buttons[i].key : buttons[i];\n"
"		const location = (typeof buttons[i] === 'object') ? buttons[i].location : 0;\n"
"		if(evt.key === key && state.buttons[i]!=keydown && (location===0 || evt.location===location)) {\n"
"			state.buttons[i]=keydown;\n"
"			return app.emit('gamepad', {index:index, type:'button', button:i, value:keydown?1:0});\n"
"		}\n"
"	}\n"
"}\n";
